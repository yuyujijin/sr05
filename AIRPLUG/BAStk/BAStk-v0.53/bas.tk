#!/bin/sh
# the next line restarts using wish \
exec wish "$0" "$@"

#    bas
#    an airplug compatible program
#    author: Bertrand Ducourthial AT utc.fr, Anthony Buisset (v0.1)
#    license type: free of charge license for academic and research purpose
#    see license.txt

# Application dite 'de base' utilisee pour l'enseignement



### 1. STANDARD INITIALISATION OF THE AIRPLUG COMPATIBLE APPLICATION ###########

# Standard name of the application and language extension ----------------------
set APP "BAS"
set app "bas"
set ll  "tk"

# Get environment variables and test the library -------------------------------
#   APG_PATH gives the path to the AIPLUG folder
#   APG_LANG give the language to display messages
if { [ catch {
		set APG_PATH $env(APG_PATH)
		set APG_LANG $env(APG_LANG)
    set libapgfile [open $APG_PATH/LIBAPG$ll/LIBAPG$ll/libapg.$ll r]
    close $libapgfile
} ] } {
    if { [info exists APG_PATH] == 0 } {
				set APG_PATH "??"
    }
    if { [info exists APG_LANG] == 0 } {
				set APG_LANG "english"
    }
		if { $APG_LANG == "french" } {
				puts stderr "\n\033\[1;31m- $::app\(local\): libapg.tk non trouvee\n \
                         Verifier l'installation. APG_PATH=$APG_PATH\n \
                         Se placer dans le repertoire bin, faire source config.sh\n \
                         Se reporter a la documentation en ligne. Contacter l'equipe Airplug.\
                         \033\[0;00m\n"
		} else {
				puts stderr "\n\033\[1;31m- $::app\(local\): libapg.tk not found\n \
                         Check the installation. APG_PATH=$APG_PATH\n \
                         In the bin directory, type source config.sh\n \
                         See the on-line documentation. Contact the Airplug team.\
                         \033\[0;00m\n"
		}				
    exit
} else {
    source $APG_PATH/LIBAPG$ll/LIBAPG$ll/libapg.tk
		if { $APG_LANG == "french" } {
				APG_vrb_dispnotif "utilisation de la distribution airplug $APG_PATH"
		} else {
				APG_vrb_dispnotif "using the Airplug distribution $APG_PATH"
		}
}


# Variables overloading --------------------------------------------------------
#   Default values set by LIBAPG may be overloaded here.
set APP_msgapropos \
"BAS v0.5
Application template (read and automatically generate messages).
Used for teaching with application NET.
Bertrand Ducourthial AT utc.fr
Universite de Technologie de Compiegne
Lab. Heudiasyc, UMR CNRS 7253
license type: Free of charge license for academic and research purpose
(see license.txt)"

set APP_msghelp \
"

Usage :
./bas.tk | ./bas.tk

./bas.tk --bas-dest=NET --whatwho --delay=1000 --ident=writter --auto | ./net.tk --whatwho --ident=writter | ./net.tk --whatwho --ident=reader| ./bas.tk --ident=reader --whatwho
"


### 2. ADDING APPLICATION COMPONENTS ###########################################

# Loading applications components ----------------------------------------------
source $PATH/rc-bas.tk
source $PATH/bas-snd.tk
source $PATH/bas-rcv.tk
source $PATH/bas-svg.tk

# Adding GUI area --------------------------------------------------------------
APG_int_addzone bassnd "Emissions" 1
APG_int_addzone basrcv "Receptions" 1

APG_int_displayzones



### 3. DEFINING START/STOP PROCEDURES ##########################################

#-- Procedure BAS_start -------------------------------------------------------#
# Action : start the application                                               #
# Remark : called by APG_start                                                 #
# Input  : nothing                                                             #
# Output : nothing                                                             #
#------------------------------------------------------------------------------#
proc BAS_start { } {

		APG_vrb_dispnotif "Starting BAS" "BAS_start" 3

		# Activation du bouton Auto du module snd
		.bassnd.btauto configure -state normal

		# abonnement a l'application NET
		APG_begin_lch "NET"

		# Test d'une demande de depart automatique des emissions periodiques
		# via l'option de la ligne de commande --autosend
		if { $::BAS_snd_autosend == true } {
        # demarrage de l'envoi periodique
		    BAS_snd_btauto
    }
}

#-- Procedure BAS_stop --------------------------------------------------------#
# Action : stop the application                                                #
# Remark : called by APG_stop                                                  #
# Input  : nothing                                                             #
# Output : nothing                                                             #
#------------------------------------------------------------------------------#
proc BAS_stop { } {
		APG_vrb_dispnotif "Stopping BAS" "BAS_stop" 3
	  # arret d'une eventuelle sauvegarde en cours
		APG_svg_stop

		# fin de l'application
		exit
}



### 4. LAUNCHING THE APPLICATION ###############################################
APG_init

